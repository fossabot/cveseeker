from typing import Dict
import httpx

def vulners_find_related_cve_data(cve: str) -> Dict:
    data = {
        'related_urls': [],
        'cvss_score': None,
        'base_severity': None,
        'tags': [],
        'description': None,
        'publish_date': None
    }
    try:
        response = httpx.get(f"https://vulners.com/api/v3/search/lucene/", params={'query': f'{cve}', 'size': 10})
        if response.status_code == 200:
            response_data = response.json()
            if response_data.get('result') == 'OK':
                search_results = response_data.get('data', {}).get('search', [])
                for item in search_results:
                    source = item.get('_source', {})

                    href = source.get('href', '')
                    vhref = source.get('vhref', '')
                    if href:
                        data['related_urls'].append(href)
                    if vhref:
                        data['related_urls'].append(vhref)

                    if not data['cvss_score'] and 'cvss' in source:
                        cvss_data = source['cvss']
                        data['cvss_score'] = str(cvss_data.get('score'))
                        data['base_severity'] = cvss_data.get('severity')

                    tags = source.get('tags', [])
                    if tags:
                        data['tags'].extend(tags)

                    if not data['description']:
                        data['description'] = source.get('description')

                    if not data['publish_date']:
                        data['publish_date'] = source.get('published')

    except Exception as e:
        print(f"Error fetching related data for CVE {cve}: {e}")
        
    return data
