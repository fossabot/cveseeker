from enum import Enum
from typing import List, Optional

from models.vulnerability import Vulnerability

class VulnerabilityDefaults(Enum):
    NOT_AVAILABLE = "N/A"

DEFAULT_VALUES = {
    "id": VulnerabilityDefaults.NOT_AVAILABLE.value,
    "source": VulnerabilityDefaults.NOT_AVAILABLE.value,
    "url": VulnerabilityDefaults.NOT_AVAILABLE.value,
    "reference_urls": [],
    "base_score": VulnerabilityDefaults.NOT_AVAILABLE.value,
    "base_severity": VulnerabilityDefaults.NOT_AVAILABLE.value,
    "description": VulnerabilityDefaults.NOT_AVAILABLE.value,
    "vulnerable_components": []
}

class VulnerabilityFactory:
    @staticmethod
    def make(
        id: Optional[str] = None,
        source: Optional[str] = None, 
        url: Optional[str] = None, 
        reference_urls: Optional[List[str]] = None,
        base_score: Optional[str] = None,
        base_severity: Optional[str] = None,
        description: Optional[str] = None,
        vulnerable_components: Optional[List[str]] = None
    ):
        return Vulnerability(
            id or DEFAULT_VALUES["id"],
            source or DEFAULT_VALUES["source"],
            url or DEFAULT_VALUES["url"],
            reference_urls if reference_urls is not None else DEFAULT_VALUES["reference_urls"].copy(),
            base_score or DEFAULT_VALUES["base_score"],
            base_severity or DEFAULT_VALUES["base_severity"],
            description or DEFAULT_VALUES["description"],
            vulnerable_components if vulnerable_components is not None else DEFAULT_VALUES["vulnerable_components"]
        )
